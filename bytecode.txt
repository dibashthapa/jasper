# Short Star Bytecode List
Star15
Star14
Star13
Star12
Star11
Star10
Star9
Star8
Star7
Star6
Star5
Star4
Star3
Star2
Star1
Star0


# Side effect free bytecodes
Ldar <Register> -> Load the value of register in the accumulator
LdaZero (0b)-> Load the zero value in the accumulator jA
LdaSmi
LdaUndefined
LdaNull
LdaTheHole
LdaTrue
LdaFalse
LdaConstant
LdaContextSlot
LdaImmutableContextSlot
LdaCurrentContextSlot

/* - [Register Loads ] */
Star
Mov
PushContext
PopContext
/* - [Test Operations ] */
TestReferenceEqual
TestUndetectable
TestNull
TestUndefined
TestTypeOf

/* Globals */
LdaGlobal
LdaGlobalInsideTypeof
StaGlobal

/* Context operations */
StaContextSlot
StaCurrentContextSlot
StaScriptContextSlot
StaCurrentScriptContextSlot

/* Load-Store lookup slots */
LdaLookupSlot
LdaLookupContextSlot
LdaLookupGlobalSlot
LdaLookupSlotInsideTypeof


StaLookupSlot

/* Property loads (LoadIC) operations */
GetNamedProperty
GetNamedPropertyFromSuper
GetKeyedProperty
GetEnumeratedKeyedProperty

/* Operations on module variables */
LdaModuleVariable
StaModuleVariable

/* Propery stores (StoreIC) operations */
SetNamedProperty
DefineNamedOwnProperty
SetKeyedProperty
DefineKeyedOwnProperty
StaInArrayLiteral


/* Binary Operators */
Add
Sub
Mul
Div
Mod
Exp
BitwiseOr
BitwiseXor
BitwiseAnd
ShiftLeft
ShiftRight
ShiftRightLogical

/* Binary operators with immediate operands */
AddSmi
SubSmi
MulSmi
DivSmi
ModSmi
ExpSmi
BitwiseOrSmi
BitwiseXorSmi
BitwiseAndSmi
ShiftLeftSmi
ShiftRightSmi
ShiftRightLogicalSmi

/* Unary Operators */
Inc
Dec
Negate
BitwiseNot
ToBooleanLogicalNot
LogicalNot
TypeOf
DeletePropertyStrict
DeletePropertySloppy

/* GetSuperConstructor operator */
GetSuperConstructor


/* Call operations */
CallAnyReceiver
CallProperty
CallProperty0
CallProperty1
CallProperty2
CallUndefinedReceiver
CallUndefinedReceiver0
CallUndefinedReceiver1
CallUndefinedReceiver2
CallWithSpread
CallRuntime
CallRuntimeForPair
CallJSRuntime

/* Intrinsics */
InvokeIntrinsic

/* Construct operators */
Construct
ConstructWithSpread
ConstructForwardAllArgs

/* Effectful Test Operators */
TestEqual
TestEqualStrict
TestLessThan
TestGreaterThan
TestLessThanOrEqual
TestGreaterThanOrEqual
TestInstanceOf
TestIn

/* Cast operators */
ToName
ToNumber
ToNumeric
ToObject
ToString
ToBoolean

/* Literals */
CreateRegExpLiteral
CreateArrayLiteral
CreateArrayFromIterable
CreateEmptyArrayLiteral
CreateObjectLiteral
CreateEmptyObjectLiteral
CloneObject

/* Tagged templates */
GetTemplateObject

/* Closure allocation */
CreateClosure

/* Context allocation */
CreateBlockContext
CreateCatchContext
CreateFunctionContext
CreateEvalContext
CreateWithContext

/* Arguments allocation */
CreateMappedArguments
CreateUnmappedArguments
CreateRestParameter

/* Control Flow -- carefully ordered for efficient checks */
/* - [Unconditional jumps] */
JumpLoop
/* - [Forward jumps] */
Jump
/* - [Start constant jumps] */
JumpConstant
/* - [Conditional jumps] */
/* - [Conditional constant jumps] */
JumpIfNullConstant
JumpIfNotNullConstant
JumpIfUndefinedConstant
JumpIfNotUndefinedConstant

JumpIfTrueConstant
JumpIfFalseConstant
JumpIfJSReceiverConstant
JumpIfForInDoneConstant
/* - [Start ToBoolean jumps] */
JumpIfToBooleanTrueConstant
JumpIfToBooleanFalseConstant
/* - [End constant jumps] */
/* - [Conditional immediate jumps] */
JumpIfToBooleanTrue
JumpIfToBooleanFalse
/* - [End ToBoolean jumps] */
JumpIfTrue
JumpIfFalse
JumpIfNull
JumpIfNotNull
JumpIfUndefined
JumpIfNotUndefined
JumpIfUndefinedOrNull
JumpIfJSReceiver
JumpIfForInDone

/* Smi-table lookup for switch statements */
SwitchOnSmiNoFeedback

/* Complex flow control For..in */
ForInEnumerate
ForInPrepare
ForInNext
ForInStep

/* Update the pending message */
SetPendingMessage

/* Non-local flow control */
Throw
ReThrow
Return
ThrowReferenceErrorIfHole
ThrowSuperNotCalledIfHole

ThrowIfNotSuperConstructor

/* Generators */
SwitchOnGeneratorState
SuspendGenerator
ResumeGenerator

/* Iterator protocol operations */
GetIterator

/* Debugger */
Debugger

/* Block Coverage */
IncBlockCounter

Abort


Ldar <Register>- Load Data into the accumulator
LdaSmi [integer_value] - Load immediate value to the accumulator
Star <Register> - Store accumulator value to the register
